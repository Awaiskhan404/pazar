# Generated by Django 3.0.11 on 2021-03-26 14:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mapbox_location_field.models
import multiselectfield.db.fields
import pazar.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Advertise_with_Us',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Business_Name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('Business_Website', models.URLField(blank=True, null=True)),
                ('Business_Facebook', models.URLField(blank=True, null=True)),
                ('Business_Instagram', models.URLField(blank=True, null=True)),
                ('Business_Twitter', models.URLField(blank=True, null=True)),
                ('Business_Linkedin', models.URLField(blank=True, null=True)),
                ('Business_Pinterest', models.URLField(blank=True, null=True)),
                ('Business_Github', models.URLField(blank=True, null=True)),
                ('Business_Email', models.EmailField(blank=True, max_length=254, null=True)),
                ('Business_Location', mapbox_location_field.models.LocationField(blank=True, map_attrs={}, null=True)),
                ('Address', mapbox_location_field.models.AddressAutoHiddenField(blank=True, map_id='map', null=True)),
                ('Business_Address', models.CharField(max_length=300)),
                ('Business_Telephone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('0?[5-9]{1}\\d{9}$')])),
                ('Business_WhatsApp', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('0?[5-9]{1}\\d{9}$')])),
                ('Business_Description', models.TextField()),
                ('Business_Logo', models.ImageField(upload_to=pazar.models.advertise_logo_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('Business_Images', models.ImageField(blank=True, null=True, upload_to=pazar.models.advertise_images_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])], verbose_name='Business Images')),
                ('Business_Established_Date', models.DateField()),
                ('Added_at', models.DateTimeField(auto_now_add=True)),
                ('view', models.PositiveIntegerField(default=0)),
                ('Mode_Of_Payments', multiselectfield.db.fields.MultiSelectField(choices=[('Cash', 'Cash'), ('Cheque', 'Cheque'), ('Credit Card / Debit Card', 'Credit Card / Debit Card'), ('NEFT/RTGS', 'NEFT/RTGS'), ('UPI', 'UPI')], max_length=50)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, help_text='Comma separated keywords here', null=True)),
                ('verified', models.BooleanField(default=False)),
                ('Added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Advertise With Us',
                'verbose_name_plural': 'Advertise With Us',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='categories/icons', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('image', models.ImageField(blank=True, null=True, upload_to='categories/images', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('description', models.TextField(blank=True, null=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='categories/cover')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('SEO_Description', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, help_text='Comma separated keywords here', null=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('0?[5-9]{1}\\d{9}$')])),
                ('msg', models.TextField(max_length=500)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('0?[5-9]{1}\\d{9}$')])),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('gstin', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=300)),
                ('answer', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('0?[5-9]{1}\\d{9}$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('message', models.TextField()),
                ('rate', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Free_Listing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Business_Name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('Business_Website', models.URLField(blank=True, null=True)),
                ('Business_Facebook', models.URLField(blank=True, null=True)),
                ('Business_Instagram', models.URLField(blank=True, null=True)),
                ('Business_Twitter', models.URLField(blank=True, null=True)),
                ('Business_Linkedin', models.URLField(blank=True, null=True)),
                ('Business_Pinterest', models.URLField(blank=True, null=True)),
                ('Business_Github', models.URLField(blank=True, null=True)),
                ('Business_Email', models.EmailField(blank=True, max_length=254, null=True)),
                ('Business_Location', mapbox_location_field.models.LocationField(blank=True, map_attrs={}, null=True)),
                ('Address', mapbox_location_field.models.AddressAutoHiddenField(blank=True, map_id='map', null=True)),
                ('Business_Address', models.CharField(max_length=300)),
                ('Business_Telephone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('0?[5-9]{1}\\d{9}$')])),
                ('Business_WhatsApp', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('0?[5-9]{1}\\d{9}$')])),
                ('Business_Description', models.TextField()),
                ('Business_Logo', models.ImageField(upload_to=pazar.models.listing_logo_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('Business_Images', models.ImageField(upload_to=pazar.models.listing_images_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])], verbose_name='Business Images')),
                ('Business_Established_Date', models.DateField()),
                ('Listed_at', models.DateTimeField(auto_now_add=True)),
                ('view', models.PositiveIntegerField(default=0)),
                ('Mode_Of_Payments', multiselectfield.db.fields.MultiSelectField(choices=[('Cash', 'Cash'), ('Cheque', 'Cheque'), ('Credit Card / Debit Card', 'Credit Card / Debit Card'), ('NEFT/RTGS', 'NEFT/RTGS'), ('UPI', 'UPI')], max_length=50)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, help_text='Comma separated keywords here', null=True)),
                ('Business_Category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Category')),
            ],
            options={
                'verbose_name': 'Free Listing',
                'verbose_name_plural': 'Free Listings',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Product_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='product categories/icons', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('description', models.TextField(blank=True, null=True)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Product Category',
                'verbose_name_plural': 'Product Categories',
            },
        ),
        migrations.CreateModel(
            name='PurchaseBill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Free_Listing')),
            ],
        ),
        migrations.CreateModel(
            name='QuotationBill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Customer')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Free_Listing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SaleBill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Customer')),
                ('shop', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='pazar.Free_Listing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Skill')),
                ('excellence', models.IntegerField(default=0, help_text='Value between 0 & 100', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Excellence ( in %)')),
                ('images', models.ImageField(blank=True, null=True, upload_to=pazar.models.skill_image_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])], verbose_name='Showcase your Skills')),
                ('color', models.CharField(default='#82B1EF', max_length=7)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('role', models.CharField(max_length=100)),
                ('desc', models.TextField()),
                ('image', models.ImageField(upload_to='testimonial')),
                ('rate', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('0?[5-9]{1}\\d{9}$')])),
                ('address', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('gstin', models.CharField(max_length=15, unique=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Free_Listing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='subcategories/images', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('description', models.TextField(blank=True, null=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='subcategories/cover')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('SEO_Description', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, help_text='Comma separated keywords here', null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Category')),
            ],
            options={
                'verbose_name_plural': 'Subcategories',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('quantity', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, null=True, upload_to=pazar.models.stock_images_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('hsn', models.CharField(max_length=200, verbose_name='HSN Number')),
                ('price', models.FloatField()),
                ('offer_price', models.FloatField(blank=True, null=True)),
                ('brand', models.CharField(max_length=100)),
                ('warranty', models.CharField(blank=True, max_length=20, null=True)),
                ('exp_date', models.DateField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Free_Listing')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Supplier')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SkillImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ImageField(upload_to=pazar.models.skill_images_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Skill')),
            ],
            options={
                'verbose_name': 'Skill Image',
                'verbose_name_plural': 'Skills Images',
            },
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gst', models.FloatField(default=0, verbose_name='GST (in %)')),
                ('gstAmount', models.FloatField(default=0)),
                ('discount', models.FloatField(default=0, verbose_name='Discount (in %)')),
                ('discountAmount', models.FloatField(default=0)),
                ('quantity', models.FloatField(default=1)),
                ('perPrice', models.FloatField(default=0)),
                ('subTotalPrice', models.FloatField(default=0)),
                ('totalPrice', models.FloatField(default=0)),
                ('billNo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.SaleBill')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Stock')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('description', models.TextField()),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price', models.PositiveIntegerField(default=0)),
                ('image', models.ImageField(upload_to=pazar.models.sale_images_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('SEO_Description', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, help_text='Comma separated keywords here', null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Product_Category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuotationItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gst', models.FloatField(default=0, verbose_name='GST (in %)')),
                ('gstAmount', models.FloatField(default=0)),
                ('discount', models.FloatField(default=0, verbose_name='Discount (in %)')),
                ('discountAmount', models.FloatField(default=0)),
                ('quantity', models.FloatField(default=1)),
                ('perPrice', models.FloatField(default=0)),
                ('subTotalPrice', models.FloatField(default=0)),
                ('totalPrice', models.FloatField(default=0)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Stock')),
                ('quoteNo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.QuotationBill')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gst', models.FloatField(default=0, verbose_name='GST (in %)')),
                ('gstAmount', models.FloatField(default=0)),
                ('discount', models.FloatField(default=0, verbose_name='Discount (in %)')),
                ('discountAmount', models.FloatField(default=0)),
                ('quantity', models.FloatField(default=1)),
                ('perPrice', models.FloatField(default=0)),
                ('subTotalPrice', models.FloatField(default=0)),
                ('totalPrice', models.FloatField(default=0)),
                ('billNo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.PurchaseBill')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Stock')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='purchasebill',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Supplier'),
        ),
        migrations.AddField(
            model_name='purchasebill',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to=pazar.models.product_images_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('desc', models.TextField()),
                ('price', models.FloatField()),
                ('offer_price', models.FloatField(blank=True, null=True)),
                ('brand', models.CharField(max_length=100)),
                ('warranty', models.CharField(max_length=20)),
                ('exp_date', models.DateField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=160, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, help_text='Comma separated keywords here', null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Product_Category')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Free_Listing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FreeListingImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=pazar.models.listing_multiple_images_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Free_Listing')),
            ],
        ),
        migrations.AddField(
            model_name='free_listing',
            name='Business_Services',
            field=models.ManyToManyField(to='pazar.Services'),
        ),
        migrations.AddField(
            model_name='free_listing',
            name='Business_Subcategory',
            field=models.ManyToManyField(to='pazar.Subcategory'),
        ),
        migrations.AddField(
            model_name='free_listing',
            name='Listed_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='free_listing',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='Tag your business here', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Business Keywords'),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('0?[5-9]{1}\\d{9}$')])),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(max_length=300)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=6)),
                ('status', models.CharField(choices=[('Married', 'Married'), ('Unmarried', 'Unmarried')], default='Unmarried', max_length=9)),
                ('age', models.IntegerField(default=18, validators=[django.core.validators.MinValueValidator(18)])),
                ('birthday', models.DateField()),
                ('role', models.CharField(max_length=50)),
                ('aadhaar', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator('^[0-9+]', 'Only digit characters.')])),
                ('pan', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.')])),
                ('bankName', models.CharField(blank=True, max_length=200, null=True)),
                ('bank', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.')])),
                ('ifsc', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters are allowed.')])),
                ('upi', models.CharField(blank=True, max_length=20, null=True)),
                ('salary', models.IntegerField()),
                ('description', models.TextField()),
                ('photo', models.ImageField(upload_to=pazar.models.employee_images_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Free_Listing')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Free_Listing'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=250)),
                ('rate', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('commented_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('commented_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Free_Listing')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_date', models.DateField()),
                ('status', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('attendance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Attendance')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='pazar.Employee')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='attendance',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='pazar.Free_Listing'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AdvertiseWithUsImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=pazar.models.advertise_multiple_images_directory_path, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg'])])),
                ('advertise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Advertise_with_Us')),
            ],
        ),
        migrations.CreateModel(
            name='AdvertiseComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=250)),
                ('rate', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('commented_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('advertise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Advertise_with_Us')),
                ('commented_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='advertise_with_us',
            name='Business_Category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pazar.Category'),
        ),
        migrations.AddField(
            model_name='advertise_with_us',
            name='Business_Services',
            field=models.ManyToManyField(to='pazar.Services'),
        ),
        migrations.AddField(
            model_name='advertise_with_us',
            name='Business_Subcategory',
            field=models.ManyToManyField(to='pazar.Subcategory'),
        ),
        migrations.AddField(
            model_name='advertise_with_us',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='Tag your business here', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Business Keywords'),
        ),
    ]
